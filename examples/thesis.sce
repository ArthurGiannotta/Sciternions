// This file is supposed to be run just to check the results, without much detailed information
// The graphs generated by this script were used by Arthur Clemente Giannotta on his thesis
// "Simulação Dinâmica do Pião Utilizando Quatérnios"

// Closes all windows
xdel(winsid())

// Clears the console
clc()

// Clears all variables
clear()

if ~exists("current_dir") then
    current_dir = get_absolute_file_path("thesis") + "Top Simulation/"

    // Imports the Sciternions library
    exec(current_dir + "../import_sciternions.sce")
end

// Loads all functions defined in the same directory as this script
getd(current_dir)

// Boolean variable that tells if the simulation has been done before
if ~exists("simulated") then
    simulated = %false
end

// Spinning top properties
xmax = 60       // Maximum top radius (mm)
zmax = 100      // Maximum top height (mm)
resolution = 30 // Rotative resolution (rotations)

function d = density(x, z) // Cross section density function (kg / m^3)
    d = 750    // Holly Wood
    //d = 950  // Box Wood 1
    //d = 1200 // Box Wood 2
endfunction

// Generates the spinning top if it wasn't saved beforehand
try
    load(top_file, "spinning_top")
catch
    spinning_top = top(density, xmax * 0.001, zmax * 0.001, resolution, %true)

    // Saves the spinning top generated
    save(top_file, "spinning_top")
end

// Simulation parameters
g = 9.80665 // Gravity acceleration (m / s^2)

// Torque applied by the floor reaction force due to gravity
function T = gravity_torque(t, q, omega)
    // Center of mass after applying the current rotation quaternion
    C = rotateq3d(spinning_top.C, q)

    // Gravitational force
    G = spinning_top.M * g

    //T = cross(C, [0; 0; G])     // slow
    T = [C(2) * G; - C(1) * G; 0] // fast
endfunction

// Null torque used in torque-free systems
function T = null_torque(t, q, omega)
    T = [0; 0; 0]
endfunction

t0 = 0    // Initial time (s)
tf = 10   // Final time (s)
dt = 0.01 // Time step (s)

// Example: q0 = rquatd(10, %X) means 10 degrees with respect to the X axis
q0 = rquatd(10, %Y) // Initial rotation/orientation (rotation quaternion)

omega0Hz = 4 // Number of rotations per second at the initial time t = t0 (Hz)
omega0 = [0; 0; 2 * %pi * omega0Hz] // Rotational speed at the initial time t = t0 (rad / s)

// 0 means "always normalize", 1 means "skip 1 step, normalize, skip 1 step, ..."
normalize = 0 // Number of time steps until the rotation quaternion is renormalized

// For possible options for the solver, look at the documentation of the function 'simulate_rotation'
// Empty string means "automatically chosen"
solver = "rk4" // Differential equation solver used by the simulator

if ~simulated then
    // Saves the current time before simulating
    timer()
    tic()
    
    // Simulates the spinning top dynamics multiple times
    sim1 = top_simulation(spinning_top, null_torque, t0:dt:tf, g, q0, omega0, normalize, solver)

    // Displays the time spent simulating
    disp("Simulations executed in " + string(timer()) + " CPU seconds.")
    disp("Simulations executed in " + string(toc()) + " seconds.")

    simulated = %true
else
    disp("Simulations skipped, since they were executed before.")
end


